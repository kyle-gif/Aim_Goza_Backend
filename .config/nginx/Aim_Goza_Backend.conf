# HTTP (80 포트) 처리 및 HTTPS 리다이렉션
server {
    listen 80;
    server_name aimgoza.com *.aimgoza.com;

    # ALB로부터 오는 HTTP 요청이 HTTPS 원본이었다면 리다이렉션
    # 이 부분은 ALB가 HTTPS를 해지하고 HTTP로 Nginx에 전달하는 경우에도 유효합니다.
    # 만약 ALB가 Nginx의 443으로 HTTPS를 그대로 전달한다면, 이 블록은 굳이 필요하지 않을 수 있습니다.
    # 하지만 일반적인 구성에서 HTTP 접근을 HTTPS로 강제하는 역할을 합니다.
    if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
    }

    charset utf-8;
    client_max_body_size 128M;

    location / {
        uwsgi_pass unix:///tmp/Aim_Goza_Backend.sock;
        include uwsgi_params;
    }

    location /static/ {
        alias /srv/Aim_Goza_Backend/static/;
    }
}

# --- HTTPS (443 포트) 처리 블록 추가 ---
server {
    listen 443 ssl; # 443 포트에서 SSL/TLS를 사용하도록 명시
    server_name aimgoza.com *.aimgoza.com;

    # SSL 인증서와 키 파일 경로를 정확히 지정해야 합니다.
    # 이 경로는 Let's Encrypt 등으로 발급받은 인증서의 실제 경로여야 합니다.
    ssl_certificate /etc/letsencrypt/live/aimgoza.com/fullchain.pem; # 예시 경로 (실제 경로로 변경)
    ssl_certificate_key /etc/letsencrypt/live/aimgoza.com/privkey.pem; # 예시 경로 (실제 경로로 변경)

    # 보안 강화를 위한 SSL 설정 (권장)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; # 실제 환경에 맞는 DNS 리졸버 사용
    resolver_timeout 5s;

    charset utf-8;
    client_max_body_size 128M;

    location / {
        uwsgi_pass unix:///tmp/Aim_Goza_Backend.sock;
        include uwsgi_params;
    }

    location /static/ {
        alias /srv/Aim_Goza_Backend/static/;
    }
}